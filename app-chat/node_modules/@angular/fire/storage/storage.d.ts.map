{"version":3,"file":"storage.d.ts","sources":["storage.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { InjectionToken, NgZone } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { FirebaseAppConfig, FirebaseOptions, ɵAngularFireSchedulers } from '@angular/fire';\r\nimport { UploadMetadata } from './interfaces';\r\nimport 'firebase/storage';\r\nimport firebase from 'firebase/app';\r\nexport declare const BUCKET: InjectionToken<string>;\r\nexport declare const MAX_UPLOAD_RETRY_TIME: InjectionToken<number>;\r\nexport declare const MAX_OPERATION_RETRY_TIME: InjectionToken<number>;\r\n/**\r\n * AngularFireStorage Service\r\n *\r\n * This service is the main entry point for this feature module. It provides\r\n * an API for uploading and downloading binary files from Cloud Storage for\r\n * Firebase.\r\n */\r\nexport declare class AngularFireStorage {\r\n    readonly storage: firebase.storage.Storage;\r\n    readonly keepUnstableUntilFirst: <T>(obs: Observable<T>) => Observable<T>;\r\n    readonly schedulers: ɵAngularFireSchedulers;\r\n    constructor(options: FirebaseOptions, nameOrConfig: string | FirebaseAppConfig | null | undefined, storageBucket: string | null, platformId: Object, zone: NgZone, maxUploadRetryTime: number | any, maxOperationRetryTime: number | any);\r\n    ref(path: string): import(\"./ref\").AngularFireStorageReference;\r\n    refFromURL(path: string): import(\"./ref\").AngularFireStorageReference;\r\n    upload(path: string, data: any, metadata?: UploadMetadata): import(\"./task\").AngularFireUploadTask;\r\n}\r\n"]}