{"version":3,"file":"ngx-wow.js","sources":["../../tmp/wow.module.ts","../../tmp/models/wow-config.ts","../../tmp/services/window.service.ts","../../tmp/services/wow.service.ts"],"sourcesContent":["import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { WindowService, NgwWowService } from './services/index';\n\n/**\n * Main module of the library\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ]\n})\nexport class NgwWowModule {\n}\n","/**\n * Configuration for the NgwWowService service.\n */\nexport class NgwWowConfig {\n\n  /**\n   * Class name that reveals the hidden box when user scrolls.\n   */\n  boxClass?= 'wow';\n\n  /**\n   * Class name that triggers the CSS animations ('animated' by default for the animate.css library)\n   */\n  animateClass?= 'animated';\n\n  /**\n   * Define the distance between the bottom of browser viewport and the top of hidden box.\n   * When the user scrolls and reach this distance the hidden box is revealed.\n   */\n  offset?= 0;\n\n  /**\n   * Turn on/off WOW.js on mobile devices.\n   */\n  mobile?= true;\n\n  /**\n   * Consatantly check for new WOW elements on the page.\n   */\n  live?= true;\n\n  /**\n   * Callback called when the given box element is shown.\n   */\n  callback?: (box: HTMLElement) => void;\n\n  scrollContainer?: string;\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Service to interact with the window object.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class WindowService {\n\n  get nativeWindow(): Window {\n    return _window();\n  }\n}\n\nfunction _window(): Window {\n  // Return the global native browser window object\n  return typeof window !== 'undefined' ? window : undefined;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { NgwWowConfig } from '../models/index';\nimport { WindowService } from './window.service';\n\n/**\n * Type definition for the `WOW` object from `WOW.js` library.\n */\ndeclare class WOW {\n  constructor (config?: NgwWowConfig);\n  /**\n   * Initializes the WOW.js library\n   * @param config the custom configuration to use\n   */\n  init(config?: NgwWowConfig): void;\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgwWowService {\n\n  // Window Object\n  private window: Window;\n\n  // Observable  source that emits the box that is about to be shown by WOW\n  private itemRevealedSource: Subject<HTMLElement>;\n  // Observable users can subscribed to, in order to be notified when the box element is about to be shown by WOW\n  itemRevealed$: Observable<HTMLElement>;\n\n  constructor(windowService: WindowService) {\n    // Observable  source\n    this.itemRevealedSource = new Subject<HTMLElement>();\n    // Observable  stream\n    this.itemRevealed$ = this.itemRevealedSource.asObservable();\n\n    this.window = windowService.nativeWindow;\n  }\n\n  init(config?: NgwWowConfig): void {\n    if (this.window) { // For Angular Universal suport\n      const wowConfig = config || {};\n      // Set callback hook:\n      wowConfig.callback = () => this.itemRevealedSource.next();\n\n      // Initializes the library\n      new WOW(wowConfig).init();\n    }\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;;;AAaA;;;YALC,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,YAAY;iBACb;aACF;;;;;;;;;;ACTD;;;;;wBAKa,KAAK;;;;4BAKD,UAAU;;;;;sBAMhB,CAAC;;;;sBAKD,IAAI;;;;oBAKN,IAAI;;CAQZ;;;;;;;;;;;ACrCD;;;AAQA;;;;IAEE,IAAI,YAAY;QACd,OAAO,OAAO,EAAE,CAAC;KAClB;;;YAPF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;AAQD;;IAEE,OAAO,OAAO,MAAM,KAAK,WAAW,GAAG,MAAM,GAAG,SAAS,CAAC;CAC3D;;;;;;AClBD;;;;IA+BE,YAAY,aAA4B;;QAEtC,IAAI,CAAC,kBAAkB,GAAG,IAAI,OAAO,EAAe,CAAC;;QAErD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;QAE5D,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC,YAAY,CAAC;KAC1C;;;;;IAED,IAAI,CAAC,MAAqB;QACxB,IAAI,IAAI,CAAC,MAAM,EAAE;;YACf,uBAAM,SAAS,GAAG,MAAM,IAAI,EAAE,CAAC;;YAE/B,SAAS,CAAC,QAAQ,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;;YAG1D,IAAI,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,CAAC;SAC3B;KACF;;;YA/BF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YAhBQ,aAAa;;;;;;;;;;;;;;;;;;;;;"}