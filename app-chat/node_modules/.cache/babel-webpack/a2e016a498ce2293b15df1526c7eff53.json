{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Administrator/Desktop/FrontEnd_ThayLong_Nhom-21/app-chat/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n// Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\nexport const createTestAudioWorkletProcessorPostMessageSupport = (nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) => {\n  return /*#__PURE__*/_asyncToGenerator(function* () {\n    // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.\n    if (nativeAudioWorkletNodeConstructor === null) {\n      return true;\n    }\n\n    if (nativeOfflineAudioContextConstructor === null) {\n      return false;\n    }\n\n    const blob = new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor(\"a\",A)'], {\n      type: 'application/javascript; charset=utf-8'\n    }); // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.\n\n    const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 44100);\n    const url = URL.createObjectURL(blob);\n    let isEmittingMessageEvents = false;\n    let isEmittingProcessorErrorEvents = false;\n\n    try {\n      yield offlineAudioContext.audioWorklet.addModule(url);\n      const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', {\n        numberOfOutputs: 0\n      });\n      const oscillator = offlineAudioContext.createOscillator();\n\n      audioWorkletNode.port.onmessage = () => isEmittingMessageEvents = true;\n\n      audioWorkletNode.onprocessorerror = () => isEmittingProcessorErrorEvents = true;\n\n      oscillator.connect(audioWorkletNode);\n      oscillator.start(0);\n      yield offlineAudioContext.startRendering();\n    } catch {// Ignore errors.\n    } finally {\n      URL.revokeObjectURL(url);\n    }\n\n    return isEmittingMessageEvents && !isEmittingProcessorErrorEvents;\n  });\n}; //# sourceMappingURL=test-audio-worklet-processor-post-message-support.js.map","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/FrontEnd_ThayLong_Nhom-21/app-chat/node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-post-message-support.js"],"names":["createTestAudioWorkletProcessorPostMessageSupport","nativeAudioWorkletNodeConstructor","nativeOfflineAudioContextConstructor","blob","Blob","type","offlineAudioContext","url","URL","createObjectURL","isEmittingMessageEvents","isEmittingProcessorErrorEvents","audioWorklet","addModule","audioWorkletNode","numberOfOutputs","oscillator","createOscillator","port","onmessage","onprocessorerror","connect","start","startRendering","revokeObjectURL"],"mappings":";AAAA;AACA,OAAO,MAAMA,iDAAiD,GAAG,CAACC,iCAAD,EAAoCC,oCAApC,KAA6E;AAC1I,wCAAO,aAAY;AACf;AACA,QAAID,iCAAiC,KAAK,IAA1C,EAAgD;AAC5C,aAAO,IAAP;AACH;;AACD,QAAIC,oCAAoC,KAAK,IAA7C,EAAmD;AAC/C,aAAO,KAAP;AACH;;AACD,UAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAAC,sHAAD,CAAT,EAAmI;AAC5IC,MAAAA,IAAI,EAAE;AADsI,KAAnI,CAAb,CARe,CAWf;;AACA,UAAMC,mBAAmB,GAAG,IAAIJ,oCAAJ,CAAyC,CAAzC,EAA4C,GAA5C,EAAiD,KAAjD,CAA5B;AACA,UAAMK,GAAG,GAAGC,GAAG,CAACC,eAAJ,CAAoBN,IAApB,CAAZ;AACA,QAAIO,uBAAuB,GAAG,KAA9B;AACA,QAAIC,8BAA8B,GAAG,KAArC;;AACA,QAAI;AACA,YAAML,mBAAmB,CAACM,YAApB,CAAiCC,SAAjC,CAA2CN,GAA3C,CAAN;AACA,YAAMO,gBAAgB,GAAG,IAAIb,iCAAJ,CAAsCK,mBAAtC,EAA2D,GAA3D,EAAgE;AAAES,QAAAA,eAAe,EAAE;AAAnB,OAAhE,CAAzB;AACA,YAAMC,UAAU,GAAGV,mBAAmB,CAACW,gBAApB,EAAnB;;AACAH,MAAAA,gBAAgB,CAACI,IAAjB,CAAsBC,SAAtB,GAAkC,MAAOT,uBAAuB,GAAG,IAAnE;;AACAI,MAAAA,gBAAgB,CAACM,gBAAjB,GAAoC,MAAOT,8BAA8B,GAAG,IAA5E;;AACAK,MAAAA,UAAU,CAACK,OAAX,CAAmBP,gBAAnB;AACAE,MAAAA,UAAU,CAACM,KAAX,CAAiB,CAAjB;AACA,YAAMhB,mBAAmB,CAACiB,cAApB,EAAN;AACH,KATD,CAUA,MAAM,CACF;AACH,KAZD,SAaQ;AACJf,MAAAA,GAAG,CAACgB,eAAJ,CAAoBjB,GAApB;AACH;;AACD,WAAOG,uBAAuB,IAAI,CAACC,8BAAnC;AACH,GAjCD;AAkCH,CAnCM,C,CAoCP","sourcesContent":["// Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\r\nexport const createTestAudioWorkletProcessorPostMessageSupport = (nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) => {\r\n    return async () => {\r\n        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.\r\n        if (nativeAudioWorkletNodeConstructor === null) {\r\n            return true;\r\n        }\r\n        if (nativeOfflineAudioContextConstructor === null) {\r\n            return false;\r\n        }\r\n        const blob = new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor(\"a\",A)'], {\r\n            type: 'application/javascript; charset=utf-8'\r\n        });\r\n        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.\r\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 44100);\r\n        const url = URL.createObjectURL(blob);\r\n        let isEmittingMessageEvents = false;\r\n        let isEmittingProcessorErrorEvents = false;\r\n        try {\r\n            await offlineAudioContext.audioWorklet.addModule(url);\r\n            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', { numberOfOutputs: 0 });\r\n            const oscillator = offlineAudioContext.createOscillator();\r\n            audioWorkletNode.port.onmessage = () => (isEmittingMessageEvents = true);\r\n            audioWorkletNode.onprocessorerror = () => (isEmittingProcessorErrorEvents = true);\r\n            oscillator.connect(audioWorkletNode);\r\n            oscillator.start(0);\r\n            await offlineAudioContext.startRendering();\r\n        }\r\n        catch {\r\n            // Ignore errors.\r\n        }\r\n        finally {\r\n            URL.revokeObjectURL(url);\r\n        }\r\n        return isEmittingMessageEvents && !isEmittingProcessorErrorEvents;\r\n    };\r\n};\r\n//# sourceMappingURL=test-audio-worklet-processor-post-message-support.js.map"]},"metadata":{},"sourceType":"module"}