const noop = () => { };
const rethrow = (error) => {
    throw error;
};
export function toObserver(nextOrObserver, error, complete) {
    if (nextOrObserver && typeof nextOrObserver !== "function") {
        if (nextOrObserver.next &&
            nextOrObserver.error &&
            nextOrObserver.complete) {
            return nextOrObserver;
        }
        return {
            complete: (nextOrObserver.complete || noop).bind(nextOrObserver),
            error: (nextOrObserver.error || rethrow).bind(nextOrObserver),
            next: (nextOrObserver.next || noop).bind(nextOrObserver),
        };
    }
    return {
        complete: complete || noop,
        error: error || rethrow,
        next: nextOrObserver || noop,
    };
}
//# sourceMappingURL=to-observer.js.map